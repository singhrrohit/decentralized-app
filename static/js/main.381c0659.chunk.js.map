{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","account","setAccount","balance","setBalance","network","setNetwork","web3","Web3","givenProvider","eth","requestAccounts","net","getNetworkType","getBalance","useEffect","loadAccounts","loadBalance","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"gQA+DeA,MA3Df,WAEE,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,qBAA9B,mBAAOK,EAAP,KAAgBC,EAAhB,KACIC,EAAO,IAAIC,IAAKA,IAAKC,eALX,sDAgBhB,wGAEwBF,EAAKG,IAAIC,kBAFjC,cAGET,EAAWD,EAAQ,IAHrB,4CAhBgB,4EAsBhB,gHAEwBM,EAAKG,IAAIE,IAAIC,iBAFrC,cAEQR,EAFR,gBAGwBE,EAAKG,IAAII,WAAWb,GAH5C,OAGQE,EAHR,OAIEG,EAAWD,GACXD,EAAWD,GALb,2CAtBgB,wBA+BhB,OAxBAY,qBAAW,YAPK,mCAQhBC,EAEC,GAAE,IAEHD,qBAAU,YAZM,mCAadE,EACD,GAAC,CAAChB,IAmBH,qBAAKiB,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,8BAEA,iDACmBjB,EADnB,OAIA,+CACeI,EADf,WAEKF,SAeJ,ECjDcgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECJYQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAOJd,G","file":"static/js/main.381c0659.chunk.js","sourcesContent":["import './App.css';\nimport Web3 from \"web3\"\nimport { useState, useEffect } from 'react';\n\nfunction App () {\n\n  const [account, setAccount] = useState()\n  const [balance, setBalance] = useState()\n  const [network, setNetwork] = useState()\nconst web3 = new Web3(Web3.givenProvider)\n\nuseEffect (()=>{\nloadAccounts()\n\n}, [])\n\nuseEffect(()=>{\n  loadBalance()\n},[account])\n\nasync function loadAccounts(){\n\n  const network = await web3.eth.requestAccounts();\n  setAccount(account[0])\n}\n\nasync function loadBalance(){\n\n  const network = await web3.eth.net.getNetworkType()\n  const balance = await web3.eth.getBalance(account)\n  setNetwork(network)\n  setBalance(balance)\n\n}\n\nreturn (\n\n<div className='App'>\n<header className='App-header'>\n  Decentralised App\n<p>\n  Your Account : ({account})\n</p>\n\n<p>\nYour Balance ({network}) :\nETH {balance}\n\n\n</p>\n\n</header>\n\n\n</div>\n\n);\n\n\n\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}